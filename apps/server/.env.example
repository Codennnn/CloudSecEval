# 应用程序配置
# 服务器监听端口
PORT=8000

# 运行环境: development, production, test
NODE_ENV=development

# ==== API 配置 ====
# API 前缀，不需要以 / 开头
API_PREFIX=api
# ========

# ==== 数据库配置 ====
# Prisma 数据库连接 URL，格式: postgresql://用户名:密码@主机:端口/数据库名
# 生产环境使用 Prisma Accelerate，格式为: prisma+postgres://accelerate.prisma-data.net/?api_key=YOUR_API_KEY
# 本地开发环境使用 Docker PostgreSQL，格式为: postgresql://postgres:dev_password@localhost:5433/nest_api_dev?schema=public
DATABASE_URL="postgresql://postgres:password@localhost:5432/nest_saas_db"

# Prisma Accelerate 配置 (可选，用于数据库连接池和缓存)
# PRISMA_ACCELERATE_API_KEY="your-api-key-here"

# ==== 本地开发数据库配置 (Docker) ====
# 以下变量用于 docker-compose.dev.yml 本地开发环境
# PostgreSQL 数据库名
POSTGRES_DB=nest_api_dev
# PostgreSQL 用户名
POSTGRES_USER=postgres
# PostgreSQL 密码
POSTGRES_PASSWORD=dev_password
# PostgreSQL 端口 (避免与系统 PostgreSQL 冲突)
POSTGRES_PORT=5433
# ========

# ==== JWT 认证配置 ====
# 用于签名 JWT 令牌的密钥，生产环境应使用复杂的随机字符串
JWT_SECRET="your-jwt-secret-key"
# 访问令牌有效期，单位秒 (默认: 1天)
JWT_EXPIRES_IN="1d"
# 刷新令牌有效期，单位秒 (默认: 7天)
JWT_REFRESH_EXPIRES_IN=7

# JWT Cookie 配置
# 是否启用 Cookie 存储 JWT (true/false)
JWT_USE_COOKIE=true
# Cookie 名称
JWT_COOKIE_NAME=access_token
# Cookie 域名 (生产环境设置为你的域名，如: .yourdomain.com)
JWT_COOKIE_DOMAIN=localhost
# Cookie 是否仅在 HTTPS 下发送 (生产环境应设置为 true)
JWT_COOKIE_SECURE=false
# Cookie SameSite 策略 (strict/lax/none)
JWT_COOKIE_SAME_SITE=lax
# ========


# 跨域资源共享 (CORS) 配置
# 允许的来源域名，多个域名用逗号分隔
CORS_ORIGIN=http://localhost:8000,https://yourdomain.com

# ==== 日志配置 ====
# 是否启用日志输出 (true/false)
LOGGER_ENABLED=true

# 日志级别: error, warn, info, http, verbose, debug, silly
LOGGER_LEVEL=error,warn,info

# 日志输出格式: json, simple, colorize
LOGGER_FORMAT=colorize

# 是否在控制台输出日志 (true/false)
LOGGER_CONSOLE=true

# 是否输出到文件 (true/false)
LOGGER_FILE=false

# 日志文件路径 (当 LOGGER_FILE=true 时生效)
LOGGER_FILE_PATH=logs/app.log

# 日志文件最大大小 (MB)
LOGGER_FILE_MAX_SIZE=10

# 保留的日志文件数量
LOGGER_FILE_MAX_FILES=5

# 是否记录 HTTP 请求日志 (true/false)
LOGGER_HTTP_REQUESTS=true

# 是否记录数据库查询日志 (true/false)
LOGGER_DATABASE_QUERIES=false

# 是否在生产环境禁用详细日志 (true/false)
LOGGER_SILENT_PRODUCTION=true
# ========

# ==== pgAdmin 配置 (可选，本地数据库管理工具) ====
# pgAdmin 登录邮箱
PGADMIN_EMAIL=admin@example.com
# pgAdmin 登录密码
PGADMIN_PASSWORD=admin
# pgAdmin 访问端口
PGADMIN_PORT=5050
# ========

# ==== 文件上传配置 ====
# 文件上传最大大小 (字节，默认 10MB)
UPLOAD_MAX_SIZE=10485760
# 允许的文件类型 (逗号分隔)
UPLOAD_ALLOWED_TYPES=image/jpeg,image/png,image/gif,application/pdf
# ========

# ==== 时区配置 ====
# 服务器时区
TIMEZONE=Asia/Shanghai
# ========

# ==== 临时目录配置 ====
# 应用临时文件存储目录
# Docker 容器内推荐使用: /tmp/app-temp
# 本地开发可使用: ./temp 或 /tmp/app-temp
TEMP_DIR=/tmp/app-temp
# ========

# ==== 超级管理员账号信息 ====
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=admin123
ADMIN_NAME=System Admin
# ========

# ==== 邮件服务配置 (Resend) ====
# Resend API 密钥，从 https://resend.com/api-keys 获取
RESEND_API_KEY="re_your_api_key_here"
# 发件人邮箱地址（需要在 Resend 中验证的域名）
MAIL_FROM_ADDRESS="noreply@yourdomain.com"
# 发件人名称
MAIL_FROM_NAME="Your App Name"
# ========
